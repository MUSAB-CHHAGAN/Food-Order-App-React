{"ast":null,"code":"var _jsxFileName = \"/home/abbas/Desktop/react apps/FOOD ORDER APP/src/Components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport classes from \"./Checkout.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport { useContext, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n\n  const isEmpty = value => value.trim() === \"\";\n\n  const isFiveChars = value => value.trim().length !== 6;\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    address: true,\n    postalCode: true,\n    city: true\n  }); //\n\n  const nameRef = useRef();\n  const addressRef = useRef();\n  const postalCodeRef = useRef();\n  const cityRef = useRef(); //\n  //\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const name = nameRef.current.value;\n    const address = addressRef.current.value;\n    const postalCode = postalCodeRef.current.value;\n    const city = cityRef.current.value;\n    const nameIsValid = !isEmpty(name);\n    const addressIsValid = !isEmpty(address);\n    const cityIsValid = !isEmpty(city);\n    const postalCodeIsValid = !isFiveChars(postalCode);\n    const formIsValid = nameIsValid && addressIsValid && cityIsValid && postalCodeIsValid;\n    setFormInputValidity({\n      name: nameIsValid,\n      address: addressIsValid,\n      postalCode: postalCodeIsValid,\n      city: cityIsValid\n    });\n\n    if (!formIsValid) {\n      console.log(\"invalid\");\n      return;\n    }\n\n    props.onConfirm({\n      name,\n      postalCode,\n      city,\n      address,\n      totalAmount: cartCtx.totalAmount\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.address ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        ref: addressRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formInputValidity.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.postalCode ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postalcode\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal-code\",\n        ref: postalCodeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid postal code(6 char)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.city ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        onClick: confirmHandler,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"Jj6W5KVEVK7R9U3HuQ5v7K0+yPI=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","CartContext","useContext","useRef","useState","Checkout","props","cartCtx","isEmpty","value","trim","isFiveChars","length","formInputValidity","setFormInputValidity","name","address","postalCode","city","nameRef","addressRef","postalCodeRef","cityRef","confirmHandler","event","preventDefault","current","nameIsValid","addressIsValid","cityIsValid","postalCodeIsValid","formIsValid","console","log","onConfirm","totalAmount","form","control","invalid","actions","onClose","submit"],"sources":["/home/abbas/Desktop/react apps/FOOD ORDER APP/src/Components/Cart/Checkout.js"],"sourcesContent":["/** @format */\nimport classes from \"./Checkout.module.css\";\nimport CartContext from \"../../store/cart-context\";\n\nimport { useContext, useRef, useState } from \"react\";\nconst Checkout = props => {\n  const cartCtx = useContext(CartContext);\n  const isEmpty = value => value.trim() === \"\";\n  const isFiveChars = value => value.trim().length !== 6;\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    address: true,\n    postalCode: true,\n    city: true,\n  });\n  //\n  const nameRef = useRef();\n  const addressRef = useRef();\n  const postalCodeRef = useRef();\n  const cityRef = useRef();\n  //\n\n  //\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const name = nameRef.current.value;\n    const address = addressRef.current.value;\n    const postalCode = postalCodeRef.current.value;\n    const city = cityRef.current.value;\n\n    const nameIsValid = !isEmpty(name);\n    const addressIsValid = !isEmpty(address);\n    const cityIsValid = !isEmpty(city);\n    const postalCodeIsValid = !isFiveChars(postalCode);\n    const formIsValid =\n      nameIsValid &&\n      addressIsValid &&\n      cityIsValid &&\n      postalCodeIsValid;\n    setFormInputValidity({\n      name: nameIsValid,\n      address: addressIsValid,\n      postalCode: postalCodeIsValid,\n      city: cityIsValid,\n    });\n    if (!formIsValid) {\n      console.log(\"invalid\");\n      return;\n    }\n\n    props.onConfirm({\n      name,\n      postalCode,\n      city,\n      address,\n      totalAmount: cartCtx.totalAmount,\n    });\n  };\n  return (\n    <form onSubmit={confirmHandler} className={classes.form}>\n      <div\n        className={`${classes.control} ${\n          formInputValidity.name ? \"\" : classes.invalid\n        }`}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameRef}></input>\n        {!formInputValidity.name && <p>Enter valid name!</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputValidity.address ? \"\" : classes.invalid\n        }`}>\n        <label htmlFor=\"address\">Address</label>\n        <input type=\"text\" id=\"address\" ref={addressRef}></input>\n        {!formInputValidity.address && <p>Enter valid address!</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputValidity.postalCode ? \"\" : classes.invalid\n        }`}>\n        <label htmlFor=\"postalcode\">Postal Code</label>\n        <input\n          type=\"text\"\n          id=\"postal-code\"\n          ref={postalCodeRef}></input>\n        {!formInputValidity.postalCode && (\n          <p>Enter valid postal code(6 char)!</p>\n        )}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputValidity.city ? \"\" : classes.invalid\n        }`}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityRef}></input>\n        {!formInputValidity.city && <p>Enter valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onClose}>\n          Cancel\n        </button>\n        <button className={classes.submit} onClick={confirmHandler}>\n          Confirm\n        </button>\n      </div>\n    </form>\n  );\n};\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}